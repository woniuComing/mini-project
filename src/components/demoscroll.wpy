<!--  -->
<template>
  <view class='scroll_layout'>
      <view class="section">
  <view class="section__title">vertical scroll</view>
  <scroll-view scroll-y style="height: 200px;" bindscrolltoupper="upper" bindscrolltolower="lower" bindscroll="scroll" scroll-into-view="{{toView}}" scroll-top="{{scrollTop}}">
    <view id="green" class="scroll-view-item bc_green"></view>
    <view id="red"  class="scroll-view-item bc_red"></view>
    <view id="yellow" class="scroll-view-item bc_yellow"></view>
    <view id="blue" class="scroll-view-item bc_blue"></view>
  </scroll-view>

  <view class="btn-area">
    <button size="mini" bindtap="tap">click me to scroll into view </button>
    <button size="mini" bindtap="tapMove">click me to scroll</button>
  </view>
</view>
<view class="section section_gap">
  <view class="section__title">horizontal scroll</view>
  <scroll-view class="scroll-view_H" scroll-x style="width: 300rpx;height:200rpx">
    <view class='scroll_wrapper'>
        <view id="green" class="scroll-view-item_H bc_green"></view>
        <view id="red"  class="scroll-view-item_H bc_red"></view>
        <view id="yellow" class="scroll-view-item_H bc_yellow"></view>
        <view id="blue" class="scroll-view-item_H bc_blue"></view>
    </view>
  </scroll-view>
</view>
  </view>
</template>

<script>
  import wepy from 'wepy';
  var order = ['red', 'yellow', 'blue', 'green', 'red'];
  export default class demoScroll extends wepy.component {
    props = {};

    data = {
        toView: 'red',
        scrollTop: 100
    };
    components = {};
    methods = {
        upper: function(e) {
    console.log(e)
  },
  lower: function(e) {
    console.log(e)
  },
  scroll: function(e) {
    console.log(e)
  },
  tap:function(e) {
      console.log('tap',order,this);
    for (var i = 0; i < order.length; ++i) {
      if (order[i] === this.toView) {
        // this.setData({
        //   toView: order[i + 1]
        // })
        this.toView = order[i + 1]
        console.log(this.toView,order[i + 1]);
        break
      }
    }
  },
  tapMove: function(e) {
    // this.setData({
    //   scrollTop: this.data.scrollTop + 10
    // })
    this.scrollTop = this.scrollTop + 10
  }
    };

    events = {};

    watch = {};

    computed = {};

    onLoad() { };

    onShow() { };
  }
</script>

<style lang='less'>
.scroll-view-item {
    width: 100%;
    height: 100%;
    
}
.bc_green {
        background-color: green;
    }
.bc_red {
    background-color: red;
}
.bc_yellow {
    background-color: yellow;
}
.bc_blue {
    background-color: blue;
}
.scroll-view-item_H {
    width: 300rpx;
    height: 200rpx;
    display: inline-block;
}
.scroll_wrapper {
    width: 1300rpx;
}
</style>